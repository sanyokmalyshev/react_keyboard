{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedkey","nameOfkey","documntKeyUp","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAOaA,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,UAAW,IAHf,EAcEC,aAAe,SAACC,GACd,EAAKC,SAAS,CAAEJ,YAAY,EAAMC,UAAWE,EAAME,OAfvD,uDAME,WACEC,SAASC,iBAAiB,QAASC,KAAKN,gBAP5C,kCAUE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,gBAX/C,oBAkBE,WACE,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGF,KAAKT,MAAMC,WAAX,mCAC+BQ,KAAKT,MAAME,UAD1C,KAEG,kCAxBd,GAAyBU,a,MCFzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.fb38d3c6.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedkey: boolean;\n  nameOfkey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedkey: false,\n    nameOfkey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.documntKeyUp);\n  }\n\n  componentWillUnmount(): void {\n    document.removeEventListener('keyup', this.documntKeyUp);\n  }\n\n  documntKeyUp = (event: KeyboardEvent) => {\n    this.setState({ pressedkey: true, nameOfkey: event.key });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedkey\n            ? `The last pressed key is [${this.state.nameOfkey}]`\n            : 'Nothing was pressed yet'}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}